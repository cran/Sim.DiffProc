\documentclass[a4paper]{article}
\usepackage{natbib}
\usepackage{amssymb,amsmath}
\usepackage[left=2.5cm,top=2cm,right=2cm,bottom=2cm]{geometry}
\usepackage[utf8]{inputenc}
\usepackage[english]{babel}
\usepackage{authblk}
\usepackage[pdftex, plainpages=true]{hyperref}
\usepackage{Sweave}
\usepackage{color}
\definecolor{Red}{rgb}{0.7,0,0}
\definecolor{Blue}{rgb}{0,0,0.8}
\hypersetup{
  colorlinks,%
  citecolor={Blue},%
  filecolor={Blue},%
  linkcolor={Blue},%
  urlcolor={Red},%
  pdfstartview={XYZ null null 1},%
  pdfview={XYZ null null null},%
  pdfpagemode=UseNone,% for no outline
  pdfmenubar={true},%
  pdfkeywords={stochastic calculus, Stratonovich calculus, It\^{o} calculus, stochastic differential equation, simulation},%
  pdfauthor={Arsalane Chouaib Guidoum and Kamal Boukhetala},%
  pdftitle={It\^{o} and Stratonovich Stochastic Calculus},%
  pdfsubject={SDE's vignette documentation for Sim.DiffProc package}
}


%% load any required packages here
\renewcommand{\today}{\begingroup
\number \day\space  \ifcase \month \or January\or February\or March\or
April\or May\or June\or July\or August\or September\or October\or
November\or December\fi
\space  \number \year \endgroup}
%%%%%%%%%%%%%%%%%%
\let\code=\texttt
\let\proglang=\texttt
\let\pkg=\texttt
\newcommand{\CRANpkg}[1]{\href{http://CRAN.R-project.org/package=#1}{\pkg{#1}}}%
\newcommand{\email}[1]{\href{mailto:#1}{\normalfont\texttt{#1}}}
\newcommand{\DR}{\href{http://cran.at.r-project.org/}}
\newcommand{\HR}{\href{http://www.usthb.dz/en/}}
\renewcommand{\vec}[1]{\boldsymbol{#1}}
\newcommand{\mat}[1]{\mathbf{#1}}
\newcommand{\VAR}{\operatorname{var}}
\newcommand{\MED}{\operatorname{Med}}
\newcommand{\COV}{\operatorname{cov}}
\newcommand{\COR}{\operatorname{cor}}
\def\E{\mathbb{E}}
\def\R{\textsf{R}}
\bibliographystyle{plainnat}
\makeatletter
\let\@fnsymbol\@arabic
\makeatother

%\VignetteIndexEntry{Itô and Stratonovich Stochastic Calculus}
%\VignetteKeywords{stochastic calculus, Stratonovich calculus, Itô calculus, stochastic differential equation, simulation}
%\VignettePackage{Sim.DiffProc}

\begin{document}

\title{\bfseries{It\^{o} and Stratonovich Stochastic Calculus with}\\
      \vskip3pt \large \CRANpkg{Sim.DiffProc} Package Version 3.2}
\author{by Arsalane Chouaib Guidoum\thanks{Faculty of Mathematics.\\Department of Probabilities \& Statistics. University of Science and Technology Houari Boumediene.\\ BP 32 El-Alia, \HR{U.S.T.H.B}, Algeria.\\
\email{acguidoum@usthb.dz}}~~and~Kamal Boukhetala\thanks{Faculty of Mathematics. University of Science and Technology Houari Boumediene.\\ BP 32 El-Alia, \HR{U.S.T.H.B}, Algeria.\\
\email{kboukhetala@usthb.dz}}}
\date{\today}

\maketitle

\begin{abstract}
We provide a detailed hands-on tutorial for the~\cite{R} add-on package \CRANpkg{Sim.DiffProc}~\citep{Sim.DiffProc},
for symbolic and floating point computations in stochastic calculus and stochastic differential equations (SDEs). The package
implement is introduced and it is explains how to use the \code{snssde1d}, \code{snssde2d} and \code{snssde3d} main functions
in this package, for simulate uni- and multidimensional SDEs, notice that, in this version of the package, multidimensional SDEs
need to have diagonal noise.
\end{abstract}

\section{Background and motivation}
Differential equations are used to describe the evolution of a system. SDEs arise when a random noise is introduced into ordinary
differential equations (ODEs). Let us consider first an example to illustrate the need for simulated and to analyze the properties
of solution of SDEs. Many (or even most) processes in nature and technology are driven by (temperature, energy, velocity,
concentration,$\dots$) changes. Such processes are called diffusion (or dispersion) processes because the quantity considered
(e.g., temperature) is distributed to an equilibrium state is established (i.e., until the differences that drive the process
are minimized). There are many examples of diffusion processes. Diffusion is responsible for the distribution of sugar throughout
a cup of coffee. Diffusion is the mechanism by which oxygen moves into our cells. Diffusion is of fundamental importance in many
disciplines of physics, economics, mathematical finance, chemistry, and biology: diffusion is relevant to the sintering process
(powder metallurgy, production of ceramics), the chemical reactor design, catalyst design in the chemical industry, doping during
the production of semiconductors, and the transport of necessary materials such as amino acids within biological cells. The diffusion
processes $\{ X_{t}, t \geq 0 \}$ solutions to SDEs, with slight notational variations, are standard in many books with applications
in different fields, see, e.g., \cite{Soong1973,Rolskietall1998,Oksendal2000,Klebaner2005,HendersonandPlaschko2006,RacicotandTheoret2006,Allen2007,Jedrzejewski2009,PlatenandBruti-Liberati2010,Stefano2011,Heinz2011},$\dots$.

If $X_{t}$ is a differentiable function defined for $t \geq 0$, $f(x,t)$ is a function of $x$ and $t$, and the following relation is satisfied for all $t$, $0 \leq t \leq T$,
\begin{equation}\label{eq:01}
\frac{dX_{t}}{dt} = X'_{t} = f(X_{t},t), \quad \text{and} \quad X_{0}=x_{0},
\end{equation}
then $X_{t}$ is a solution of the ODE with the initial condition $x_{0}$. The above equation can be written in other forms (by continuity of $X'_{t}$):
\begin{equation*}
X_{t} = X_{0} + \int_{0}^{t} f(X_{s},s)ds,
\end{equation*}
Before we give a rigorous definition of SDEs, we show how they arise as a randomly perturbed ODEs and give a physical interpretation.

The White noise process $\xi_{t}$ is formally defined as the derivative of the Wiener process,
\begin{equation}\label{00}
\xi_{t} \equiv \frac{dW_{t}}{dt} \equiv W'(t).
\end{equation}
It does not exist as a function of $t$ in the usual sense, since a Wiener process is nowhere differentiable. If $g(x,t)$ is the intensity of the noise at point $x$ at time $t$, then it is agreed that $\int_{0}^{T} g(X_{t},t) \xi_{t}dt=\int_{0}^{T} g(X_{t},t) W'(t)dt=\int_{0}^{T} g(X_{t},t)dW_{t}$, is It\^{o} integral~\citep{Ito1944}. SDEs arise, for example, when the coefficients of ordinary equation \eqref{eq:01} are perturbed by White noise. If $X_{t}$ denotes the population density, then the population growth can be described by the ODE: $dX_{t} / dt = a X_{t}(1-X_{t})$. The growth is exponential with birth rate $a$, when this density is small, and slows down when the density increases. Random perturbation of the birth rate results in the equation: $dX_{t} / dt = (a+ \sigma \xi_{t}) X_{t}(1-X_{t})$, or the SDE:
\begin{equation*}
dX_{t} = a X_{t} (1-X_{t})dt+ \sigma X_{t} (1-X_{t}) dW_{t}, \quad X_{0}=x_{0}.
\end{equation*}

There are thus two widely used types of stochastic calculus, Stratonovich and It\^{o}
(see~\cite{KloedenandPlaten1991a,KloedenandPlaten1991b}), differing in respect of the stochastic integral used. Modelling issues typically dictate which version in appropriate, but once one has been chosen a corresponding equation of the other type with the same solutions can be determined. Thus it is possible to switch between the two stochastic calculus. Specifically, the processes $\{ X_{t}, t \geq 0 \}$ solution to the It\^{o} SDE:
\begin{equation}\label{intro:eq01}
    dX_{t} = f(t,X_{t}) dt + g(t,X_{t}) dW_{t}
\end{equation}
where $\{ W_{t}, t \geq 0 \}$ is the standard Wiener process or standard Brownian motion, the drift $f(t,X_{t})$ and diffusion $g(t,X_{t})$ are known functions that are assumed to be sufficiently regular (Lipschitz, bounded growth) for existence and uniqueness of solution see~\citet{Oksendal2000}; has the same solutions as the Stratonovich\footnote{To distinguish Stratonovich SDE from the It\^{o} SDE we insert a $\circ$ before the differential $dW_{t}$ in equation \eqref{intro:eq02}.} SDE:
\begin{equation}\label{intro:eq02}
    dX_{t} = \underline{f}(t,X_{t}) dt + g(t,X_{t}) \circ dW_{t}
\end{equation}
with the modified drift coefficient which is defined by:
$$
\underline{f}(t,X_{t})= f(t,X_{t}) - \frac{1}{2} g(t,X_{t})\frac{\partial g}{\partial x}(t,X_{t})
$$

Many theoretical problems on the SDEs have become the object of practical research, enabled many searchers in different domains to use these equations to modeling and to analyse practical problems. We seek to motivate further interest in this specific field by introducing the \CRANpkg{Sim.DiffProc} package~\citep{Sim.DiffProc} to simulate the solution of a user defined It\^{o} or Stratonovich uni- and multidimensional SDEs, estimate parameters from data and visualize statistics, and other features that will be explained in another vignettes (see \code{vignette(package="Sim.DiffProc")}), for example the determination of the first passage time in SDEs$\dots$; freely available on the Comprehensive \R~Archive Network (CRAN) at \url{http://CRAN.R-project.org/package=Sim.DiffProc}. There already exist a number of packages that can perform for stochastic calculus in \R; see \CRANpkg{sde}~\citep{Stefano2009} and \CRANpkg{yuima} project package for SDEs~\citep{Stefano2014} a freely available on CRAN, this packages provides functions for simulation and inference for stochastic differential equations. It is the accompanying package to the book of~\citet{Stefano2008}.

To install \pkg{Sim.DiffProc} package on your version of \DR{\R}($\geq 2.15.1$), type the following line in the \R~console.
<<eval=FALSE>>=
install.packages("Sim.DiffProc")
@
If you don’t have enough privileges to install software on your machine or account, you will need the help of your system administrator. 
Once the package has been installed, you can actually use it by loading the code with:
<<packages,results=hide,print=FALSE>>=
library(Sim.DiffProc)
@
A short list of help topics, corresponding to most of the commands in this package, is available by typing:
<<eval=FALSE>>=
library(help = "Sim.DiffProc")
@
This vignette contains only a brief introduction to using \pkg{Sim.DiffProc} package to simulate the solution of a user defined It\^{o} or Stratonovich stochastic differential equations.
\section{It\^{o} vs Stratonovich SDE's}
We can write an $d$-dimensional SDE in It\^{o} form as:
\begin{equation}\label{eq03}
  d\vec{X_{t}} = \vec{F(t,X_{t})} dt + \mat{G(t,X_{t})} d\vec{W_{t}}
\end{equation}
or in Stratonovich form as:
\begin{equation}\label{eq04}
    d\vec{X_{t}} = \vec{F(t,X_{t})} dt + \mat{G(t,X_{t})} \circ d\vec{W_{t}}
\end{equation}
where $\vec{F(.)}:\mathbb{R}^{d} \rightarrow \mathbb{R}^{d}$ is called the \emph{drift} of the SED's, $\mat{G(.)}:\mathbb{R}^{d} \rightarrow \mathbb{R}^{d \times m}$ is called the \emph{diffusion} of the SDE's, and $\vec{W_{t}}$ is an $m$-dimensional process having independent\footnote{In this version of the package, multidimensional SDE's need to have diagonal noise.} scalar Wiener process components. It is possible to convert from one interpretation to the other in order to take advantage of one of the approaches as appropriate: in the scalar case $(d=1)$, if the It\^{o} SDE is as given in \eqref{intro:eq01} then the Stratonovich SDE is given by \eqref{intro:eq02}. In other words \eqref{eq03} and \eqref{eq04}, under different rules of calculus, have the same solution, for example: $dX_{t}=\mu X_{t} dt + \sigma X_{t} dW_{t}$, has solution: $X_{t}= X_{0}\exp\left(\left(\mu-0.5\sigma^{2}\right)t+\sigma W_{t}\right)$, as dose $dX_{t}=\left(\mu-0.5\sigma^{2}\right)X_{t}dt+\sigma X_{t} \circ dW_{t}$. Obviously, in the case of additive noise ($g(.)$ independent of $x \Rightarrow \partial g/ \partial x = 0$) the It\^{o} and Stratonovich representations are equivalent (\eqref{eq03} $\equiv$ \eqref{eq04}). For multidimensional SDE's the relationship between the two representations is given by:
$$
\underline{\vec{F}}_{i}(t,X_{t})= \vec{F}_{i}(t,X_{t}) - \frac{1}{2}\sum_{j=1}^{d}\sum_{k=1}^{m} \mat{G}_{jk}(t,X_{t})\frac{\partial \mat{G}_{ik}}{\partial X_{j}}(t,X_{t}),\qquad i=1,\dots,d.
$$
More in detail, the user can specify:
\begin{itemize}
  \item[$\circ$] The It\^{o} or the Stratonovich SDE's to be simulated.
  \item[$\circ$] The SDE's structural parameter value. i.e., the drift and diffusion coefficient of SDE's.
  \item[$\circ$] The number of the SDE's solution trajectories to be simulated.
  \item[$\circ$] The numerical integration method: Euler-Maruyama, Predictor-corrector, Milstein, Second Milstein, It\^{o} Taylor order 1.5, Heun order 2; Runge-Kutta 1,2 and 3-stage. There a rich literature on simulation of solutions of the SDE’s, e.g., \cite{KloedenandPlaten1989,KloedenandPlaten1995,KloedenandPlaten1994,SaitoandMitsui1993,Kasdin1995,Andreas2003a,Andreas2003b,Andreas2004,Andreas2007,Andreas2010}.
  \item[$\circ$] The time interval $[t_{0},T]$ to be considered.
  \item[$\circ$] The integration stepsize (discretization).
\end{itemize}
To obtain:
\begin{itemize}
  \item[$\circ$] Numerical solution of SDE's.
  \item[$\circ$] Plot(s) of the solution trajectories.
  \item[$\circ$] Plot(s) of the trajectories empirical mean, together with their $\alpha \%$ confidence bands.
  \item[$\circ$] Monte-Carlo statistics of the solution process at the end time $T$, i.e. mean, median, quantiles, moments, skewness, kurtosis, $\alpha \%$ confidence bands,$\dots$.
\end{itemize}
\subsection{The \texttt{snssde1d()} function}
Assume that we want to describe the following SDE in It\^{o}\footnote{The equivalently of \eqref{eq05} the following Stratonovich SDE: $dX_{t} =  \mu X_{t} \circ dW_{t}$.} form:
\begin{equation}\label{eq05}
  dX_{t} = \frac{1}{2}\mu^{2} X_{t} dt + \mu X_{t} dW_{t},\qquad X_{0}=x{0}
\end{equation}
in Stratonovich form:
\begin{equation}\label{eq06}
    dX_{t} = \frac{1}{2}\mu^{2} X_{t} dt + \mu X_{t} \circ dW_{t},\qquad X_{0}=x{0}
\end{equation}
In the above $\vec{F}(t,x)=\frac{1}{2}\mu^{2} x$ and $\mat{G}(t,x)= \mu x$, according to the notation of the \eqref{eq03} in the case 
$d=1$ and $W_{t}$ is a standard Wiener process ($m=1$). This can be described in \pkg{Sim.DiffProc} by specifying the drift and 
diffusion coefficients as plain \R~expressions passed as strings which depends on the state variable \code{x} and time variable 
\code{t}, by specifying only one trajectorie (\code{M=1}) in $[t_{0},T]=[0,1]$, with integration stepsize $\Delta t = 0.001$ (by default: \code{Dt=(T-t0)/N}), 
$\mu=0.5$ and $X_{0}=10$. specifying the type of SED by \code{type="ito"} or \code{type="str"} (by default \code{type="ito"}),
and the numerical method used (by default \code{method="euler"}).
<<>>=
f <- expression( (0.5*0.5^2*x) )
g <- expression( 0.5*x )
mod1 <- snssde1d(drift=f,diffusion=g,x0=10,M=1,N=1000)
mod2 <- snssde1d(drift=f,diffusion=g,x0=10,M=1,N=1000,type="str")
mod1
mod2
@
which can be plotted using the command \code{plot}, and the result is shown in Figure \ref{fig1}.
<<print=FALSE,eval=FALSE>>=
plot(mod1)
plot(mod2)
@
\setkeys{Gin}{width=0.45\textwidth}
\begin{figure}[!ht]
\begin{center}
<<fig=TRUE,print=FALSE,echo=FALSE>>=
plot(mod1)
@
<<fig=TRUE,print=FALSE,echo=FALSE>>=
plot(mod2)
@ 
\end{center}
\caption{The \code{plot} function is used to draw a trajectory of a simulated \code{`snssde1d'} object.}\label{fig1}
\end{figure}
If we simulate 50 trajectories and let the settings above unchanged (except for the number of simulations, of course); Using Monte-Carlo 
simulations, the following statistical measures (\code{S3 method} for class \code{'snssde1d'}) can be approximated for the $X_{t}$ process at the end time $T$, i.e. $X_{T}$:
\begin{enumerate}
  \item the expected (mean) value $\E(X_{T})$; using the command \code{mean}.
  \item the variance $\VAR(X_{T})$.
  \item the median $\MED(X_{T})$; using the command \code{median}.
  \item the quartile of $X_{T}$; using the command \code{quantile}.
  \item the skewness and the kurtosis of $X_{T}$; using the command \code{skewness} and \code{kurtosis}.
  \item the moments of $X_{T}$; using the command \code{moment}.
  \item the $\alpha \%$ confidence bands of $X_{T}$; using the command \code{bconfint}.
\end{enumerate}
Can be use the \code{summary} function to produce result summaries of the results of class \code{'snssde1d'},
<<>>=
mod1 <- snssde1d(drift=f,diffusion=g,x0=10,M=50,N=1000)
mod2 <- snssde1d(drift=f,diffusion=g,x0=10,M=50,N=1000,type="str")
summary(mod1)
summary(mod2)
@
The flow of trajectories can be seen in Figure \ref{fig2}, reports the sample mean (red lines) of the solutions of 
the It\^{o} SDE \eqref{eq05} and Stratonovich SDE \eqref{eq06}, their empirical $95\%$ confidence bands (from the $2.5th$ to the 
$97.5th$ percentile; blue lines), we can proceed as follows:
<<print=FALSE,eval=FALSE>>=
plot(mod1,plot.type="single")
lines(time(mod1),mean(mod1),col=2,lwd=2)
lines(time(mod1),bconfint(mod1,level=0.95)[,1],col=4,lwd=2)
lines(time(mod1),bconfint(mod1,level=0.95)[,2],col=4,lwd=2)
legend("topleft",c("mean path",paste("bound of", 95,"% confidence")),
       inset = .01,col=c(2,4),lwd=2,cex=0.8)
       
dev.new()

plot(mod2,plot.type="single")
lines(time(mod2),mean(mod2),col=2,lwd=2)
lines(time(mod2),bconfint(mod2,level=0.95)[,1],col=4,lwd=2)
lines(time(mod2),bconfint(mod2,level=0.95)[,2],col=4,lwd=2)
legend("topleft",c("mean path",paste("bound of", 95,"% confidence")),
       inset = .01,col=c(2,4),lwd=2,cex=0.8)
@
\setkeys{Gin}{width=0.45\textwidth}
\begin{figure}[!ht]
\begin{center}
<<fig=TRUE,print=FALSE,echo=FALSE>>=
plot(mod1,ylim=c(0,40),plot.type="single")
lines(time(mod1),mean(mod1),col=2,lwd=2)
lines(time(mod1),bconfint(mod1,level=0.95)[,1],col=4,lwd=2)
lines(time(mod1),bconfint(mod1,level=0.95)[,2],col=4,lwd=2)
legend("topleft",c("mean path",paste("bound of", 95,"% confidence")),
       inset = .01,col=c(2,4),lwd=2,cex=0.8)
@
<<fig=TRUE,print=FALSE,echo=FALSE>>=
plot(mod2,ylim=c(0,40),plot.type="single")
lines(time(mod2),mean(mod2),col=2,lwd=2)
lines(time(mod2),bconfint(mod2,level=0.95)[,1],col=4,lwd=2)
lines(time(mod2),bconfint(mod2,level=0.95)[,2],col=4,lwd=2)
legend("topleft",c("mean path",paste("bound of", 95,"% confidence")),
       inset = .01,col=c(2,4),lwd=2,cex=0.8)
@
\end{center} 
\caption{$50$ trajectories of It\^{o} SDE \code{'mod1'} (Left), and Stratonovich SDE \code{'mod2'} (Right).}\label{fig2}
\end{figure}

\subsubsection{Attractive model for one-diffusion processes}
The problem of dispersion is a very complex phenomenon is many problems dealing with environment, biology, physics, chemistry,
etc $\dots$, the dynamical behavior of such phenomenon is a random process, often hard to modeling mathematically. This problem,
have been proposed by many authors ~\cite{HadelerMottoniandSchumacher1980,Helland1983,Heemink1990,Boukhetala1996}. For many
dispersal problems, the diffusion processes are used to modeling the behavior of the dispersal phenomenon. Consider a shallow water 
area with depth $L( x , y , z , t )$, horizontal $U_w( x , y , z , t )$ and $V_w( x , y , z , t )$, $S_w( x , y , z , t )$ the velocities of the water in respectively the $x-$, $y-$ and $z-$ directions, and $U_a( x , y , z )$, $V_a( x , y , z )$, $S_a( x , y , z )$ the velocities of a particle caused by an attractive mechanism. Let $( X_t , Y_t , Z_t )$ be the position of a particle injected in the water at time $t = t_0$ at the point $(x_0 , y_0 , z_0 )$. For a single particle, we propose the following dispersion models family ~\citep{Boukhetala1996}:

\begin{equation}\label{eq07}
\begin{cases}
dX_t = \left( -U_a + U_w +\frac{\frac{ \partial L}{ \partial x}}{L} D + \frac{ \partial D}{ \partial x} \right) dt + \sqrt{2 D} dW_{1,t}\\
dY_t = \left( -V_a + V_w +\frac{\frac{ \partial L}{ \partial y}}{L} D + \frac{ \partial D}{ \partial y} \right) dt + \sqrt{2 D} dW_{2,t} \qquad \quad ,t \in [0,T]\\
dZ_t = \left( -S_a + S_w +\frac{\frac{ \partial L}{ \partial z}}{L} D + \frac{ \partial D}{ \partial z} \right) dt + \sqrt{2 D} dW_{3,t}
\end{cases}
\end{equation}
with:
\begin{flalign*}
U_a& = \frac{K x}{\left( \sqrt{x^{2} + y^{2} + z^{2}} \right)^{ s + 1}},&
V_a& = \frac{K y}{\left( \sqrt{x^{2} + y^{2} + z^{2}} \right)^{ s + 1}},&
S_a& = \frac{K z}{\left( \sqrt{x^{2} + y^{2} + z^{2}} \right)^{ s + 1}}.
\end{flalign*}
where $s \geq 1$ and $K > 0$, ($W_{1,t},W_{2,t},W_{3,t}$) three independent Brownian motions. $U_w( x , y , z , t )$, $V_w( x , y , z , t )$ and $S_w( x , y , z , t )$ are neglected and the dispersion coefficient $D( x , y , z )$ is supposed constant and equal to $\frac{1}{2} \sigma^{2}$ ($\sigma > 0$).

Using It\^{o}'s transform for system \eqref{eq07}, it is shown that the radial process $R_t = \| ( X_t , Y_t , Z_t) \|$ is a Markovian diffusion, solution of the stochastic differential equation, given by:
\begin{equation}\label{eq08}
    dR_t = \left( \frac{0.5 \sigma^{2} R_t^{ s - 1} - K}{R_t^{s}} \right) dt + \sigma d \widetilde{W}_t,
\end{equation}
where: $2 K > \sigma^{2}$ condition to ensure attractiveness; $\|.\|$ is the Euclidean norm and $\widetilde{W}_t$ is a Brownian motion. We 
simulate $50$ trajectories to radial process \eqref{eq08} by \code{snssde1d} function, and the graphical representation can be seen in Figure \ref{fig3},
<<>>=
K = 4; s = 1; sigma = 0.2
fx <- expression( ((0.5*sigma^2 *x^(s-1) - K)/ x^s) )
gx <- expression( sigma )
mod <- snssde1d(drift=fx,diffusion=gx, x0=3, M=50, N=1000)
mod
summary(mod)
@
<<print=FALSE,eval=FALSE>>=
plot(mod,plot.type="single")
@
\setkeys{Gin}{width=0.45\textwidth}
\begin{figure}[!ht]
\begin{center}
<<fig=TRUE,print=FALSE,echo=FALSE>>=
plot(mod,plot.type="single")
@ 
\end{center}
\caption{Flow paths for an attractive model of one-diffusion processes.}\label{fig3}
\end{figure}

\subsection{The \texttt{snssde2d()} function}
A system of two SDE's for the couple ($X_t$,$Y_t$) driven by two independent Brownian motions
($W_{1,t},W_{2,t}$). Remember that this version of the package handles SDE's with diagonal noise only. The following $2$-dimensional SDE's into matrix form with a vector of drift expressions and a diffusion matrix in It\^{o} form:
\begin{equation}\label{eq09}
\left(
\begin{array}{c}
  dX_t \\
  dY_t
\end{array}
\right)=
\left(
\begin{array}{c}
  f_{x}(t,X_{t},Y_{t}) \\
  f_{y}(t,X_{t},Y_{t})
\end{array}
\right)
dt +
\left(
  \begin{array}{cc}
    g_{x}(t,X_{t},Y_{t}) & 0 \\
    0 & g_{y}(t,X_{t},Y_{t}) \\
  \end{array}
\right)
\left(
\begin{array}{c}
  dW_{1,t} \\
  dW_{2,t}
\end{array}
\right)
\end{equation}
in Stratonovich form:
\begin{equation}\label{eq10}
\left(
\begin{array}{c}
  dX_t \\
  dY_t
\end{array}
\right)=
\left(
\begin{array}{c}
  f_{x}(t,X_{t},Y_{t}) \\
  f_{y}(t,X_{t},Y_{t})
\end{array}
\right)
dt +
\left(
  \begin{array}{cc}
    g_{x}(t,X_{t},Y_{t}) & 0 \\
    0 & g_{y}(t,X_{t},Y_{t}) \\
  \end{array}
\right)
\circ
\left(
\begin{array}{c}
  dW_{1,t} \\
  dW_{2,t}
\end{array}
\right)
\end{equation}
We illustrate the usage of the \code{snssde2d} function to simulate the solution of a  It\^{o} \eqref{eq09} or Stratonovich \eqref{eq10} SDE's two dimensional, by a simple example and two applications.
\subsubsection{Basic example 1}
Assume that we want to describe the following SDE (2d) in It\^{o} form:
\begin{equation}\label{eq016}
\begin{cases}
dX_t = 4 (-1-X_{t}) Y_{t} dt + 0.2 dW_{1,t}\\
dY_t = 4 (1-Y_{t}) X_{t} dt + 0.2 dW_{2,t}
\end{cases}
\end{equation}
for \eqref{eq016}, we simulate a flow of 50 trajectories, with integration stepsize $t = 0.001$, and using stochastic Runge-Kutta methods 3-stage,
<<>>=
fx  <- expression(4*(-1-x)*y)
gx  <- expression(0.2)
fy  <- expression(4*(1-y)*x)
gy  <- expression(0.2)
mod2d <- snssde2d(driftx=fx,diffx=gx,drifty=fy,diffy=gy,x0=1,y0=-1,M=50,
                  Dt=0.001,method="rk3")
mod2d
summary(mod2d)
@
for plotted (with time) using the command \code{plot}, and in the plane $(O,X,Y)$ using the command \code{plot2d}. The result is shown in Figure \ref{fig002},
<<print=FALSE,eval=FALSE>>=
plot(mod2d,pos=2)
plot2d(mod2d)
@
\setkeys{Gin}{width=0.45\textwidth}
\begin{figure}[!ht]
\begin{center}
<<fig=TRUE,print=FALSE,echo=FALSE>>=
plot(mod2d,pos=2)
@
<<fig=TRUE,print=FALSE,echo=FALSE>>=
plot2d(mod2d)
@
\end{center} 
\caption{Simulation $50$ trajectories of \eqref{eq016} (Left), representation of \eqref{eq016} in a plane $(O,X,Y)$ (Right).}\label{fig002}
\end{figure}

\subsubsection{Kalman-Bucy Filter}
Assume that the signal and the observation processes satisfy linear It\^{o} SDE's \cite[p. 379]{Klebaner2005}, with time time-dependent non-random coefficients, given by:
\begin{equation}\label{eq16}
\begin{cases}
dX_t = a_{1}(t) X_{t} dt + b_{1}(t) dW_{1,t}\\
dY_t = a_{2}(t) X_{t} dt + b_{2}(t) dW_{2,t}
\end{cases}
\end{equation}
with two independent Brownian motions $(W_{1,t},W_{2,t})$, and initial conditions $(X_{0},Y_{0})=(0,0)$, by specifying the drift and 
diffusion coefficients of two process $X_{t}$ and $Y_{t}$ as plain \R~expressions passed as strings which depends on the two state 
variables \code{(x,y)} and time variable t, with $a_{1}(t)=2t$, $a_{2}(t)=0.5t$ and $b_{1}(t)=b_{2}(t)=0.1t$, integration stepsizeand 
$\Delta t=0.001$ and numerical method used by default \code{"euler"}. Which can easily be implemented in \R~as follows:
<<>>=
a1  <- function(t) 2*t
a2  <- function(t) 0.5*t
b1  = b2 <- function(t) 0.1*t
fx    <- expression(a1(t)*x)
gx    <- expression(b1(t))
fy    <- expression(a2(t)*x)
gy    <- expression(b2(t))
mod2d <- snssde2d(driftx=fx,diffx=gx,drifty=fy,diffy=gy)
mod2d
@
for plotted (with time) using the command \code{plot}, and the result is shown in Figure \ref{fig6},
<<print=FALSE,eval=FALSE>>=
plot(mod2d,union=TRUE,pos=3)
@
\setkeys{Gin}{width=0.45\textwidth}
\begin{figure}[!ht]
\begin{center}
<<fig=TRUE,print=FALSE,echo=FALSE>>=
plot(mod2d,union=TRUE,pos=3)
@ 
\end{center}
\caption{Kalman-Bucy Filter with time time-dependent non-random coefficients.}\label{fig6}
\end{figure}

\subsubsection{The stochastic Van-der-Pol equation}
The Van der Pol equation is an ordinary differential equation that can be derived from the Rayleigh differential equation by differentiating 
and setting $\dot{x}=y$, see \cite{VanderPol1922,NaessandHegstad1994,Leung1995} and for more complex dynamics in Van der Pol equation see \cite{ZhujunZhiyanandTao2006}. It is an equation describing self-sustaining oscillations in which energy is fed into small oscillations and removed from large oscillations. This equation arises in the study of circuits containing vacuum tubes and is given by:
\begin{equation}\label{eq11}
\ddot{X}-\mu (1-X^{2}) \dot{X} + X = 0,
\end{equation}
where $x$ is the position coordinate (which is a function of the time $t$), and $\mu$ is a scalar parameter indicating the nonlinearity and the strength of the damping. Consider additive stochastic perturbations of the Van der Pol equation, and random excitation force of such systems by White noise $\xi_{t}$, with delta-type correlation functions $\mathbb{E}(\xi_{t}\xi_{t+h})=2\sigma \delta (h)$
\begin{equation}\label{eq12}
\ddot{X}-\mu (1-X^{2}) \dot{X} + X = \xi_{t},
\end{equation}
where $\mu > 0$ . Its solution cannot be obtained in terms of elementary functions, even in the phase plane. The White noise $\xi_{t}$ is formally derivative of Wiener process $W_{t}$ \eqref{00}. The representation as a system of two first order equations follows the same idea as in the deterministic case by letting $\dot{x}=y$, from physical equation \eqref{eq12} we get the above system:
\begin{equation}\label{eq13}
\begin{cases}
\dot{X} = Y \\
\dot{Y} = \mu \left(1-X^{2}\right) Y - X + \xi_{t}
\end{cases}
\end{equation}
the system \eqref{eq13} can be mathematically translated by a system of Stratonovitch equations,
\begin{equation}\label{eq14}
\begin{cases}
dX_{t} = Y_{t} dt \\
dY_{t} = \left(\mu (1-X^{2}_{t}) Y_{t} - X_{t}\right) dt + 2 \sigma \circ dW_{2,t}
\end{cases}
\end{equation}
implemented in \R~as follows:
<<>>=
mu = 4; sigma=0.1
fx <- expression( y )
gx <- expression( 0 )
fy <- expression( (mu*( 1-x^2 )* y - x) )
gy <- expression( 2*sigma)
mod2d <- snssde2d(driftx=fx,diffx=gx,drifty=fy,diffy=gy,type="str",T=100,N=10000)
mod2d
@
which can be plotted in the plane $(O,X,Y)$ using the command \code{plot2d}, and the result is shown in Figure \ref{fig004} and \ref{fig005}:
<<print=FALSE,eval=FALSE>>=
plot2d(mod2d)
plot(mod2d,pos=3)
@
\setkeys{Gin}{width=0.45\textwidth}
\begin{figure}[!ht]
\begin{center}
<<fig=TRUE,print=FALSE,echo=FALSE>>=
plot2d(mod2d)
@
<<fig=TRUE,print=FALSE,echo=FALSE>>=
plot(mod2d,pos=3)
@
\end{center} 
\caption{$2D$ stochastic Van-der-Pol equation (Left). Relaxation oscillation in the Van der Pol oscillator (Right) ($\mu=4$ and $\sigma=0.1$).}\label{fig004}
\end{figure}
\setkeys{Gin}{width=0.45\textwidth}
\begin{figure}[!ht]
\begin{center}
<<fig=TRUE,print=FALSE,echo=FALSE>>=
mu = .2
mod2d <- snssde2d(driftx=fx,diffx=gx,drifty=fy,diffy=gy,type="str",T=100,,N=10000)
plot2d(mod2d)
@
<<fig=TRUE,print=FALSE,echo=FALSE>>=
plot(mod2d,pos=3)
@
\end{center} 
\caption{$2D$ stochastic Van-der-Pol equation (Left). Relaxation oscillation in the Van der Pol oscillator (Right) ($\mu=0.2$ and $\sigma=0.1$).}\label{fig005}
\end{figure}

\subsection{The \texttt{snssde3d()} function}
A system of three SDE's for the triple $(X_t, Y_t ,Z_t)$ driven by three independent standard Brownian motions
($W_{1,t}$,$W_{2,t}$,$W_{3,t}$). The following $3$-dimensional SDE's into matrix form with a vector of drift expressions and a diffusion matrix in It\^{o} form:
\begin{equation}\label{eq17}
\left(
\begin{array}{c}
  dX_t \\
  dY_t \\
  dZ_t
\end{array}
\right)=
\left(
\begin{array}{c}
  f_{x}(t,X_{t},Y_{t},Z_{t}) \\
  f_{y}(t,X_{t},Y_{t},Z_{t}) \\
  f_{z}(t,X_{t},Y_{t},Z_{t})
\end{array}
\right)
dt +
\left(
  \begin{array}{ccc}
    g_{x}(t,X_{t},Y_{t},Z_{t}) & 0 & 0\\
    0 & g_{y}(t,X_{t},Y_{t},Z_{t}) & 0 \\
    0 & 0 & g_{z}(t,X_{t},Y_{t},Z_{t})\\
  \end{array}
\right)
\left(
\begin{array}{c}
  dW_{1,t} \\
  dW_{2,t} \\
  dW_{3,t}
\end{array}
\right)
\end{equation}
in Stratonovich form:
\begin{equation}\label{eq18}
\left(
\begin{array}{c}
  dX_t \\
  dY_t \\
  dZ_t
\end{array}
\right)=
\left(
\begin{array}{c}
  f_{x}(t,X_{t},Y_{t},Z_{t}) \\
  f_{y}(t,X_{t},Y_{t},Z_{t}) \\
  f_{z}(t,X_{t},Y_{t},Z_{t})
\end{array}
\right)
dt +
\left(
  \begin{array}{ccc}
    g_{x}(t,X_{t},Y_{t},Z_{t}) & 0 & 0\\
    0 & g_{y}(t,X_{t},Y_{t},Z_{t}) & 0 \\
    0 & 0 & g_{z}(t,X_{t},Y_{t},Z_{t})\\
  \end{array}
\right)
\circ
\left(
\begin{array}{c}
  dW_{1,t} \\
  dW_{2,t} \\
  dW_{3,t}
\end{array}
\right)
\end{equation}
We illustrate the usage of the \code{snssde3d} function to simulate the solution of a It\^{o} \eqref{eq17} or Stratonovich \eqref{eq18}
SDE's three dimensional, by three applications.

\subsubsection{Basic example 2}
Assume that we want to describe the following SDE (3d) in It\^{o} form:
\begin{equation}\label{eq0166}
\begin{cases}
dX_t = 4 (-1-X_{t}) Y_{t} dt + 0.2 dW_{1,t}\\
dY_t = 4 (1-Y_{t}) X_{t} dt + 0.2 dW_{2,t}\\
dZ_t = 4 (1-Z_{t}) Y_{t} dt + 0.2 dW_{3,t}
\end{cases}
\end{equation}
for \eqref{eq0166}, we simulate a flow of 50 trajectories, with integration stepsize $t = 0.001$, and using stochastic Runge-Kutta methods 2-stage,

<<>>=
fx <- expression(4*(-1-x)*y)
gx <- expression(0.2)
fy <- expression(4*(1-y)*x)
gy <- expression(0.2)
fz <- expression(4*(1-z)*y)
gz <- expression(0.2)
mod3d <- snssde3d(x0=2,y0=-2,z0=-2,driftx=fx,diffx=gx,drifty=fy,diffy=gy,
                driftz=fz,diffz=gz,N=1000,M=50,method="rk2")
mod3d
summary(mod3d)
@
for plotted (with time) using the command \code{plot}, and in the plane $(O,X,Y,Z)$ using the command \code{plot3D}. The result is shown in Figure \ref{fig0022},

<<print=FALSE,eval=FALSE>>=
plot(mod3d,union = TRUE,pos=2)   ## with time
plot3D(mod3d,display="persp")    ## in space (O,X,Y,Z)
@
\setkeys{Gin}{width=0.45\textwidth}
\begin{figure}[!ht]
\begin{center}
<<fig=TRUE,print=FALSE,echo=FALSE>>=
plot(mod3d,union = TRUE,pos=2)
@
<<fig=TRUE,print=FALSE,echo=FALSE>>=
plot3D(mod3d,display="persp")
@
\end{center} 
\caption{Simulation $50$ trajectories of system \eqref{eq0166} (Left), representation one path of \eqref{eq0166} in a plane $(O,X,Y,Z)$ (Right).}\label{fig0022}
\end{figure}

\subsubsection{Attractive model for multidimensional diffusion processes}
If we assume that $U_w( x , y , z , t )$, $V_w( x , y , z , t )$ and $S_w( x , y , z , t )$ are neglected and the dispersion coefficient $D( x , y , z )\left(=0.5 \sigma^{2}\right)$ is constant. 
A system \eqref{eq07} becomes (see \cite{Boukhetala1996}):
\begin{eqnarray}\label{eq19}
% \nonumber to remove numbering (before each equation)
  dX_t &=& \left(\frac{-K X_{t}}{X^{2}_{t} + Y^{2}_{t} + Z^{2}_{t}}\right) dt + \sigma dW_{1,t} \nonumber\\
  dY_t &=& \left(\frac{-K Y_{t}}{X^{2}_{t} + Y^{2}_{t} + Z^{2}_{t}}\right) dt + \sigma dW_{2,t} \\
  dZ_t &=& \left(\frac{-K Z_{t}}{X^{2}_{t} + Y^{2}_{t} + Z^{2}_{t}}\right) dt + \sigma dW_{3,t} \nonumber
\end{eqnarray}
with initial conditions $(X_{0},Y_{0},Z_{0})=(1,1,1)$, by specifying the drift and
diffusion coefficients of three process $X_{t}$, $Y_{t}$ and $Z_{t}$ as plain \R~expressions passed as strings which depends on the three state
variables \code{(x,y,z)} and time variable t, with integration stepsizeand $\Delta t=0.0001$ and numerical method used by default \code{"euler"}. 
Which can easily be implemented \eqref{eq19} in \R~as follows:
<<>>=
K = 4; s = 1; sigma = 0.2
fx <- expression( (-K*x/sqrt(x^2+y^2+z^2)) )
gx <- expression(sigma)
fy <- expression( (-K*y/sqrt(x^2+y^2+z^2)) )
gy <- expression(sigma)
fz <- expression( (-K*z/sqrt(x^2+y^2+z^2)) )
gz <- expression(sigma)
mod3d <- snssde3d(driftx=fx,diffx=gx,drifty=fy,diffy=gy,driftz=fz,diffz=gz,
                  N=10000,x0=1,y0=1,z0=1)
mod3d
@
for plotted (with time) using the command \code{plot}, and in the space $(O,X,Y,Z)$ using \code{plot3D} with two display types 
\code{("rgl","persp")}, the first with \CRANpkg{rgl} package~\citep{rgl} and the second display with \CRANpkg{scatterplot3d} package~\citep{scatterplot3d}. 
The result is shown in Figure \ref{fig4},
<<print=FALSE,eval=FALSE>>=
plot3D(mod3d,display="persp",col="blue")  ## in space
plot(mod3d,union=TRUE,pos=2)              ## with time
@
\setkeys{Gin}{width=0.45\textwidth}
\begin{figure}[!ht]
\begin{center}
<<fig=TRUE,print=FALSE,echo=FALSE>>=
plot3D(mod3d,display="persp",col="blue")
@
<<fig=TRUE,print=FALSE,echo=FALSE>>=
plot(mod3d,union=TRUE,pos=2)
@
\end{center} 
\caption{$3$-dimensional attractive model $\mathcal{M}(K=4,s=1,\sigma=0.2)$.}\label{fig4}
\end{figure}

\subsubsection{Stochastic Lotka-Volterra three-species}

In the 1920s, the Italian mathematician Vito Volterra \citep{Volterra1926} proposed a differential equation model to describe the 
population dynamics of two interacting species, a predator and its prey. Independently, in the United States, the very equations studied by Volterra were
derived by Alfred Lotka \citep{Lotka1925} to describe a hypothetical chemical reaction in which the chemical concentrations oscillate. The Lotka-Volterra 
model consists of the following system of (2D) differential equations:
\begin{equation}\label{eq22}
\begin{cases}
\dot{X} = a X - b X Y \\
\dot{Y} = -c Y + d X Y 
\end{cases}
\end{equation}
where $Y_t$ and $X_t$ represent, respectively, the predator population and the prey population as functions of time 
(for more details see, e.g., \citep{HofbauerandSo1994},\cite[p. 366]{Klebaner2005}). The following 
model is proposed by \cite{Erica2002} as:
\begin{equation}\label{eq23}
\begin{cases}
\dot{X} = a X - b X Y \\
\dot{Y} = -c Y + d X Y - e Y Z\\
\dot{Z} = -f Z + g Y Z
\end{cases}
\end{equation}
The parameters $a,b,c,d,e,f > 0$, for the description of this model see \cite{Erica2002}. 
We express mathematically the system \eqref{eq23} by Stratonovitch equations,
\begin{equation}\label{eq24}
\begin{cases}
dX_{t} = (a X_{t} - b X_{t} Y_{t})dt+ \sigma \circ dW_{1,t}\\
dY_{t} = (-c Y_{t} + d X_{t} Y_{t} - e Y_{t} Z_{t})dt + \sigma \circ dW_{2,t}\\
dZ_{t} = (-f Z_{t} + g Y_{t} Z_{t})dt +\sigma \circ dW_{3,t}
\end{cases}
\end{equation} 
simulate this system in space $(O,X,Y,Z)$ using the function \code{snssde3d}, with parameters $a=b=c=d=e=f = 1$, $\sigma=0.03$, 
$(X_{0},Y_{0},Z_{0})=(0.5,1,2)$ and final time $T=50$.
<<>>=
fx <- expression((  x - x*y))
gx <- expression(0.03)
fy <- expression(( -y + x*y-y*z ))
gy <- expression(0.03)
fz <- expression(( -z+ y*z ))
gz <- expression(0.03)
mod3d <- snssde3d(driftx=fx,diffx=gx,drifty=fy,diffy=gy,driftz=fz,diffz=gz,
                  N=10000,T=20,x0=0.5,y0=1,z0=2,type="str")
mod3d
@
The result is shown in Figure \ref{fig8},
<<print=FALSE,eval=FALSE>>=
plot3D(mod3d,"persp",col="blue")  ## in space 
plot(mod3d,union=TRUE)            ## with time
@
\setkeys{Gin}{width=0.45\textwidth}
\begin{figure}[!ht]
\begin{center}
<<fig=TRUE,print=FALSE,echo=FALSE>>=
plot3D(mod3d,"persp",col="blue")
@
<<fig=TRUE,print=FALSE,echo=FALSE>>=
plot(mod3d,union=TRUE) 
@
\end{center} 
\caption{A trajectory in $xyz$-space (Left). A solution $(X_{t},Y_{t},Z_{t})$ with initial conditions (0.5,1,2) (Right). (The case: $a=b=c=d=e=f = 1$ and $\sigma=0.03$)}\label{fig8}
\end{figure}

\subsubsection{Transformation of a SDE one dimensional}

Next is an example of one dimensional SDE driven by three independent Brownian motions ($W_{1,t}$,$W_{2,t}$,$W_{3,t}$), as follows:
\begin{equation}\label{eq20}
  dX_{t} = \mu W_{1,t} dt + \sigma W_{2,t} dW_{3,t}
\end{equation}
To simulate the solution of the equation \eqref{eq20} we make a transformation to a system of three equations as follows:
\begin{eqnarray}\label{eq21}
% \nonumber to remove numbering (before each equation)
  dX_t &=&  \mu Y_{t}  dt + \sigma Z_{t} dW_{3,t} \nonumber\\
  dY_t &=&  dW_{1,t} \\
  dZ_t &=&  dW_{2,t} \nonumber
\end{eqnarray}
run by calling the function \code{"snssde3d"} to produce a simulation of the solution of \eqref{eq20}, with $\mu = 2$ and $\sigma = 0.2$:
<<>>=
fx <- expression(2*y)
gx <- expression(0.2*z)
fy <- expression(0)
gy <- expression(1)
fz <- expression(0)
gz <- expression(1)
modtra <- snssde3d(driftx=fx,diffx=gx,drifty=fy,diffy=gy,driftz=fz,diffz=gz)
modtra
@
the following code produces the result in the Figure \ref{fig7},
<<print=FALSE,eval=FALSE>>= 
plot(modtra$X,plot.type="single",ylab="X")
@
\setkeys{Gin}{width=0.45\textwidth}
\begin{figure}[!ht]
\begin{center}
<<fig=TRUE,print=FALSE,echo=FALSE>>=
plot(modtra$X,plot.type="single",ylab="X")
@
\end{center} 
\caption{Simulate path of: $dX_{t} = 2 W_{1,t} dt + 0.2 W_{2,t} dW_{3,t}$ used \code{snssde3d} function.}\label{fig7}
\end{figure}

\section{It\^{o} vs Stratonovich: How to choose?}

\begin{itemize}
  \item [$\circ$] White noise is an idealisation; real fluctuating forcing has finite amplitude and timescale.
  \item [$\circ$] If white noise is approximation to continuously fluctuating noise with finite memory (much shorter than dynamical timescales), appropriate representation is Stratonovich.
  \item [$\circ$] If white noise approximates set of discrete pulses with finite separation to which system responds, or SDE continuous approximation to discrete system, then It\^{o} representation appropriate.
  \item [$\circ$] Because in an atmosphere/ocean/climate context "driving noise" a representation of "fast" part of continuous fluid dynamical system, Stratonovich SDEs usually most natural. For example, consider $2D$ SDEs:
  \begin{eqnarray*}
    \frac{dX_{t}}{dt} &=& a(t,X_{t})+b(t,X_{t})\eta \\
    \frac{dX_{t}}{dt} &=& -\frac{1}{\tau} \eta + \frac{\sigma}{\tau}\dot{W}
  \end{eqnarray*}
  as $\tau \rightarrow 0$, $\eta \rightarrow \dot{W}$ and $X_{t}$ satisfies the Stratonovich SDE.
  \item [$\circ$] Operationally: Stratonovich SDE's easier to solve analytically, but It\^{o} SDE's more natural starting point for numerical schemes.
  \item [$\circ$] Chief usages:
  \begin{itemize}
    \item [$\circ$] Stratonovich SDEs: Physics and engineering.
    \item [$\circ$] It\^{o} SDEs: Mathematical analysis and financial mathematics.
  \end{itemize}
\end{itemize}

\section{Summary}

This work is about ready to be used \pkg{Sim.DiffProc} package for simulation of stochastic differential equations and some related 
estimation methods based on discrete sampled observations from such models. We hope that the package presented here and the updated 
survey on the subject might be of help for practitioners, postgraduate and PhD students, and researchers in the field who might want 
to implement new methods and ideas using \R~as a statistical environment. The simulation studies implemented in \R~language seem very 
preferment and efficient, because it is a statistical environment, which permits to realize, to visualize and validate the simulations.

\begin{thebibliography}{1}
\expandafter\ifx\csname natexlab\endcsname\relax\def\natexlab#1{#1}\fi
\expandafter\ifx\csname url\endcsname\relax
  \def\url#1{{\tt #1}}\fi

\bibitem[Friedman, 1975]{Friedman1975}
Friedman, A. (1975).
\newblock \emph{Stochastic differential equations and applications}.
\newblock Vol.1, Academic Press.

\bibitem[Soong, 1973]{Soong1973}
Soong, T.T. (1973).
\newblock \emph{Random differential equations in science and engineering}.
\newblock Academic Press, New York.
\newblock Lc Number: QA274.23.S58.

\bibitem[Henderson and Plaschko, 2006]{HendersonandPlaschko2006}
Henderson, D. and Plaschko,P. (2006).
\newblock \emph{Stochastic differential equations in science and engineering}.
\newblock World Scientific.

\bibitem[It\^{o}, 1944]{Ito1944}
It\^{o}, K. (1944).
\newblock Stochastic integral.
\newblock Tokyo,
\newblock \emph{Proc. Jap. Acad}, 20, pp. 519--529.

\bibitem[Allen, 2007]{Allen2007}
Allen, E. (2007).
\newblock \emph{Modeling with It\^{o} stochastic differential equations}.
\newblock Springer-Verlag.

\bibitem[Klebaner, 2005]{Klebaner2005}
Klebaner, F.C. (2005).
\newblock \emph{Introduction to Stochastic Calculus with Applications}.
\newblock Imperial College Press

\bibitem[Kasdin, 1995]{Kasdin1995}
Kasdin, J. (1995).
\newblock Runge-Kutta algorithm for the numerical integration of stochastic differential equations.
\newblock \emph{Journal of Guidance, Control, and Dynamics.} Vol.18, No.1, 114--120.

\bibitem[Andreas, 2003a]{Andreas2003a}
Andreas, R. (2003a).
\newblock Embedded stochastic Runge-Kutta methods.
\newblock \emph{Proc. Appl. Math. Mech.}, 2(1), 461--462.

\bibitem[Andreas, 2003b]{Andreas2003b}
Andreas, R. (2003b).
\newblock Coefficients of Runge-Kutta schemes for It\^{o} stochastic differential equations.
\newblock \emph{Proc. Appl. Math. Mech.}, 3(1), 571--572.

\bibitem[Andreas, 2004]{Andreas2004}
Andreas, R. (2004).
\newblock Runge-Kutta methods for Stratonovich stochastic differential equation systems with commutative noise.
\newblock \emph{J. Comput. Appl. Math.}, 164--165, 613--627.

\bibitem[Andreas, 2007]{Andreas2007}
Andreas, R. (2007).
\newblock Second order Runge-Kutta methods for Stratonovich stochastic differential equations.
\newblock \emph{BIT Numerical Mathematics.} Vol.47, No.3, 657--680.

\bibitem[Andreas, 2010]{Andreas2010}
Andreas, R. (2010).
\newblock Runge-Kutta methods for the strong approximation of solutions of stochastic differential equations.
\newblock \emph{SIAM J. Numer. Anal.}, Vol.48, No.3, 922--952.

\bibitem[Racicot and Th\'{e}oret, 2006]{RacicotandTheoret2006}
Racicot, F.\'{E}, and Théoret, R. (2006).
\newblock \emph{Finance Computationnelle et Gestion des Risques}.
\newblock Presses de l'Université du Québec.

\bibitem[Boukhetala, 1996]{Boukhetala1996}
Boukhetala, K. (1996).
\newblock Modelling and simulation of a dispersion pollutant with attractive centre.
\newblock ed by Computational Mechanics Publications, Southampton ,U.K and Computational Mechanics Inc, Boston, USA, 245--252.

\bibitem[Jedrzejewski, 2009]{Jedrzejewski2009}
Jedrzejewski, F. (2009).
\newblock \emph{Modeles aleatoires et physique probabiliste}.
\newblock Springer-Verlag.

\bibitem[Stefano, 2008]{Stefano2008}
Stefano, M.I. (2008).
\newblock \emph{Simulation and inference for stochastic differential equations: with \R~examples}.
\newblock Springer-Verlag, New York.

\bibitem[Stefano, 2015]{Stefano2009}
Stefano, M.I. (2015).
\newblock \CRANpkg{sde}: Simulation and Inference for Stochastic Differential Equations.
\newblock \emph{\R~package version 2.0.14}.
\newblock \url{http://CRAN.R-project.org/package=sde}

\bibitem[Stefano, 2011]{Stefano2011}
Stefano, M.I. (2011).
\newblock \emph{Option Pricing and Estimation of Financial Models with \R}.
\newblock John Wiley \& Sons Ltd.

\bibitem[Stefano et all, 2014]{Stefano2014}
Alexandre Brouste, Masaaki Fukasawa, Hideitsu Hino, Stefano M. Iacus, Kengo Kamatani, Yuta Koike, Hiroki Masuda, Ryosuke Nomura, Teppei Ogihara, Yasutaka Shimuzu, Masayuki Uchida, Nakahiro Yoshida. (2014).
\newblock The \CRANpkg{yuima} Project: A Computational Framework for Simulation and Inference of Stochastic Differential Equations.
\newblock \emph{Journal of Statistical Software}, 57(4).1--51.
\newblock \url{http://www.jstatsoft.org/v57/i04/}.

\bibitem[Guidoum and Boukhetala, 2016]{Sim.DiffProc}
Guidoum, A. C. and Boukhetala, K. (2016).
\newblock \CRANpkg{Sim.DiffProc}: Simulation of Diffusion Processes.
\newblock \R~package version 3.2.
\newblock \url{http://CRAN.R-project.org/package=Sim.DiffProc}

\bibitem[Guidoum and Boukhetala, 2014b]{}
Guidoum, A. C. and Boukhetala, K. (2014).
\newblock A new \R~package for It\^{o} and Stratonovich stochastic calculus.
\newblock In submission (Computational Statistics, Springer).

\bibitem[Kloeden and Platen, 1989]{KloedenandPlaten1989}
Kloeden, P.E, and Platen, E. (1989).
\newblock A survey of numerical methods for stochastic differential equations.
\newblock \emph{Stochastic Hydrology and Hydraulics}, 3, 155--178.

\bibitem[Kloeden and Platen, 1991a]{KloedenandPlaten1991a}
Kloeden, P.E, and Platen, E. (1991a).
\newblock Relations between multiple It\^{o} and stratonovich integrals.
\newblock \emph{Stochastic Analysis and Applications}, 9(3), 311--321.

\bibitem[Kloeden and Platen, 1991b]{KloedenandPlaten1991b}
Kloeden, P.E, and Platen, E. (1991b).
\newblock Stratonovich and It\^{o} stochastic taylor expansions.
\newblock \emph{Mathematische Nachrichten}, 151, 33--50.

\bibitem[Kloeden and Platen, 1995]{KloedenandPlaten1995}
Kloeden, P.E, and Platen, E. (1995).
\newblock \emph{Numerical Solution of Stochastic Differential Equations}.
\newblock Springer-Verlag, New York.

\bibitem[Kloeden et all, 1994]{KloedenandPlaten1994}
Kloeden, P.E, Platen, E. and Schurz, H. (1994).
\newblock \emph{Numerical solution of SDE through computer experiments}.
\newblock Springer-Verlag, New York.

\bibitem[Daniel and Duncan, 2015]{rgl}
Daniel, A. and  Duncan, M. (2015).
\newblock \CRANpkg{rgl}: 3D visualization device system (OpenGL).
\newblock \emph{\R~package version 0.95.1367}.
\newblock \url{http://CRAN.R-project.org/package=rgl}

\bibitem[Uwe et all, 2015]{scatterplot3d}
Uwe, L., Martin, M. and Sarah, S. (2015).
\newblock \CRANpkg{scatterplot3d}: 3D Scatter Plot.
\newblock \emph{\R~package version 0.3-36}.
\newblock \url{http://CRAN.R-project.org/package=scatterplot3d}

\bibitem[{\O}ksendal, 2000]{Oksendal2000}
{\O}ksendal, B. (2000).
\newblock \emph{Stochastic Differential Equations: An Introduction with Applications}.
\newblock 5th edn. Springer-Verlag, Berlin.

\bibitem[Rolski et all, 1998]{Rolskietall1998}
Rolski T, Schmidli H, Schmidt V and Teugels J. (1998).
\newblock \emph{Stochastic Processes for Insurance and Finance}.
\newblock John Wiley \& Sons.

\bibitem[Heinz, 2011]{Heinz2011}
Heinz, S. (2011).
\newblock \emph{Mathematical Modeling}.
\newblock Stochastic Evolution, pp. 295--334,
\newblock Springer-Verlag, Berlin Heidelberg.

\bibitem[Platen, 1980]{Platen1980}
Platen, E. (1980).
\newblock Weak convergence of approximations of It\^{o} integral equations.
\newblock \emph{Z Angew Math Mech}. 60, 609--614.

\bibitem[Platen and Bruti-Liberati, 2010]{PlatenandBruti-Liberati2010}
Platen, E. and Bruti-Liberati, N. (2010).
\newblock \emph{Numerical Solution of Stochastic Differential Equations with Jumps in Finance.}
\newblock Springer-Verlag, New York

\bibitem[Saito and Mitsui, 1993]{SaitoandMitsui1993}
Saito, Y, and Mitsui, T. (1993).
\newblock Simulation of Stochastic Differential Equations.
\newblock \emph{The Annals of the Institute of Statistical Mathematics}, 3, 419--432.

\bibitem[Hofbauer and So, 1994]{HofbauerandSo1994}
Hofbauer, J. and J. W. H. So. (1994).
\newblock Multiple limit cycles for three dimensional Lotka-Volterra equations.
\newblock \emph{Applied Mathematics Letters}. 7(6).59--63.

\bibitem[\R~Development Core Team (2015)]{R}
\R~Development Core Team (2015).
\newblock {\em \R: A Language and Environment for Statistical Computing}.
\newblock Vienna, Austria.
\newblock \url{http://www.R-project.org/}

\bibitem[Hadeler et all, 1980]{HadelerMottoniandSchumacher1980}
Hadeler, K. de Mottoni, P. and Schumacher, K. (1980).
\newblock Dynamic Models for Animal Orientation.
\newblock \emph{The Journal of Mathematical Biology}, 10, 307--332.

\bibitem[Helland, 1983]{Helland1983}
Helland, S. (1983).
\newblock Diffusion models for the dispersal of insects near an attractive center.
\newblock \emph{The Journal of Mathematical Biology}, 18, 103--122.

\bibitem[Volterra, 1926]{Volterra1926}
Volterra, V. (1926).
\newblock Variazioni e fluttuazioni del numero d’individui in specie animali conviventi.
\newblock \emph{Mem. R. Accad. Naz.dei Lincei,} Ser. V, vol. 2.

\bibitem[Lotka, 1925]{Lotka1925}
Lotka, A. J. (1925).
\newblock Elements of Physical Biology.
\newblock \emph{Williams \& Wilkins Co., Baltimore.}

\bibitem[Heemink, 1990]{Heemink1990}
Heemink, A. (1990).
\newblock Stochastic Modelling of Dispersion in Shallow Water.
\newblock \emph{Stochastic Hydrology and Hydraulics}, 4, 161--174.

\bibitem[Erica et all, 2002]{Erica2002}
Erica E., Joseph E.P., Joseph, P.P. and Zac W. (2002).
\newblock A Lotka Volterra Three Species Food Chain.
\newblock \emph{Matematics Magazine}, 75(4), 243--255.
\newblock \url{http://math.bd.psu.edu/faculty/jprevite/mathmag243-255.pdf}

\bibitem[Leung, 1995]{Leung1995}
Leung, H. K. (1995).
\newblock Stochastic transient of a noisy van der Pol oscillator.
\newblock \emph{Physica A: Statistical Mechanics and its Applications}, 221(1--3), 340--347.

\bibitem[Van der Pol, 1922]{VanderPol1922}
Van der Pol, B. (1922).
\newblock \emph{Philosophical Magazine.} 43--177.

\bibitem[Naess and Hegstad, 1994]{NaessandHegstad1994}
Naess, A. and Hegstad, B. K. (1994).
\newblock Response Statistics of Van der Pol Oscillators Excited by White Noise.
\newblock \emph{Nonlinear Dynamies}. 5, 287--297.

\bibitem[Zhujun et all, 2006]{ZhujunZhiyanandTao2006}
Zhujun, J., Zhiyan, Y. and Tao, J. (2006).
\newblock Complex dynamics in Duffing–Van der Pol equation.
\newblock \emph{Chaos, Solitons and Fractals}. 27, 722--747.


\end{thebibliography}

\end{document}

